MODULE ShipmentTotal;

REQUIRE Shipment, ShipmentSelection, ShipmentFilter,
        ShipmentSearch, ShipmentWaiting,
        ShipmentPeriod;

NAMESPACE Manufacturing;

initialDemand 'Initial demand' (Product p) = GROUP SUM initialDemand(ShipmentLine l) IF product(l) = p AND selectedShipments(shipment(l));

EXTEND FORM shipments
    OBJECTS ss = Shipment
    FILTERS selectedShipments(ss)

    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDERS name(c)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(c) DEFAULT

    OBJECTS p = Product
    PROPERTIES(p) READONLY name, nameUom, idBarCode, id
    PROPERTIES READONLY 'Available (source)' = prevAvailableRec(shipmentLocation(), p) SHOWIF shipmentLocation()

    PROPERTIES(p) READONLY 'Total' = initialDemand BACKGROUND RGB(255,212,212) IF initialDemand(p) > OVERRIDE prevAvailableRec(shipmentLocation(), p), (0 IF shipmentLocation()) 
                           
    PROPERTIES initialDemand(ss, p) READONLYIF NOT (status(ss) = ShipmentStatus.draft OR status(ss) = ShipmentStatus.waiting)
                                    COLUMNS 'id' (ss) 
                                    HEADER CONCAT ' ', nameCustomer(ss), nameToLocation(ss), [FORMULA STRING[8] 'to_char(($1),\'DD.MM\')'](scheduledDate(ss))
                                    ON CHANGE changeInitialDemand(ss, p)
    
    PROPERTIES onHand 'Available' = prevAvailableRec(toLocation(ss), p) SHOWIF toLocation(ss) READONLY
                                  COLUMNS 'id' (ss)
    FILTERGROUP demand
        FILTER 'Initial demand' initialDemand(p) DEFAULT
        FILTER 'Available' prevAvailableRec(shipmentLocation(), p)
    FILTERS level(category(p), c)
    FILTERGROUP active
        FILTER '{Active}' active(p) 'F10' DEFAULT  
    ORDERS name(p)
;

DESIGN shipments {
    tabbedPane {
        NEW total {
            showIf = countSelectedShipments();
            caption = 'Total';
            horizontal = TRUE;
            MOVE BOX(TREE categories);
            NEW products {
                fill = 3;
                NEW productParams { horizontal = TRUE; }
                MOVE BOX(p) {
                    PROPERTY(initialDemand(ss, p)) { charWidth = 6; background = #EEEEFF; }
                    PROPERTY(onHand) { charWidth = 6; }
                }
            }
        } 
    }
}

// period

EXTEND FORM shipments
    OBJECTS pFrom = DATE PANEL BEFORE p, pTo = DATE PANEL BEFORE p
    PROPERTIES pFrom 'Period from' = VALUE(pFrom), pTo '{to}' = VALUE(pTo)
    
    PROPERTIES shipped 'Shipped' = shippedPeriodicRec(toLocation(ss), p, pFrom, pTo) SHOWIF toLocation(ss) READONLY
                                     COLUMNS 'id' (ss)
    
    EVENTS ON INIT { 
        SEEK shipments.pFrom = subtract(currentDate(), 7);
        SEEK shipments.pTo = subtract(currentDate(), 1); 
    }
;

DESIGN shipments {
    productParams {
        MOVE PROPERTY(pFrom);
        MOVE PROPERTY(pTo);
        PROPERTY(shipped) { charWidth = 6; }
    }
}