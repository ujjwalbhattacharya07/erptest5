MODULE LocationImport;

REQUIRE CostLocation, MasterData;

NAMESPACE Inventory;

locationExport 'Export locations' () {
    NEWSESSION {
        IF NOT (GROUP SUM 1 IF Location l AND l IS Location) THEN {
            NEW l = Location {
                id(l) <- '123';
                name(l) <- 'My warehouse';
            }
        }
    
        LOCAL f = EXCELFILE ();
        EXPORT XLSX HEADER FROM '{ID}' = id(Location l), '{Name}' = name(l), 'ParentID' = idParent(l), 'CompanyID' = idCompany(l), 
                                'Address' = address(l), 'City' = city(l), 'State' = state(l), 'Zip' = zip(l),
                                'Cost' = calcCost(l) TO f;   
        open(f());
    }
}

locationImport 'Import locations' () {
    LOCAL id = STRING[50] (INTEGER);
    LOCAL name = ISTRING[30] (INTEGER);
    LOCAL parent = ISTRING[50] (INTEGER);
    LOCAL owner = ISTRING[50] (INTEGER);
    LOCAL address = ISTRING[50] (INTEGER);
    LOCAL city = ISTRING[30] (INTEGER);
    LOCAL state = ISTRING[30] (INTEGER);
    LOCAL zip = ISTRING[10] (INTEGER);
    LOCAL calcCost = BOOLEAN (INTEGER);
    
    INPUT f = EXCELFILE DO {
        NEWSESSION {   
            IMPORT XLS HEADER FROM f TO id = A, name = B, parent = C, owner = D, address = E, city = F, state = G, zip = H, calcCost = I;
            
            FOR imported(INTEGER i) AND (id(i) OR name(i)) DO NEW l = Location {
                id(l) <- id(i);
                name(l) <- name(i);
                company(l) <- partner(owner(i));
                address(l) <- address(i);
                city(l) <- city(i);
                state(l) <- state(i);
                zip(l) <- zip(i);
                calcCost(l) <- calcCost(i);
            }
            
            FOR imported(INTEGER i) AND id(Location l) = id(i) DO {
                parent(l) <- location(parent(i));
            }
            APPLY;
            MESSAGE 'Import completed';
        }
    }    
}

EXTEND FORM migrationData 
    PROPERTIES locationExport(), locationImport()
;

DESIGN migrationData {
    commons {
        NEW location {
            horizontal = TRUE;
            caption = 'Locations';
            MOVE PROPERTY(locationImport());
            MOVE PROPERTY(locationExport());
        }
    }
}
