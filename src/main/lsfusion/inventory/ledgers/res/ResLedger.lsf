MODULE ResLedger;

REQUIRE InvLedger;

NAMESPACE Inventory;

CLASS ResLedger 'Reservation ledger';
class 'View' (ResLedger l) = objectClassName(l) IF l IS ResLedger CHARWIDTH 15;

type 'Type' = ABSTRACT ISTRING[100] (ResLedger) CHARWIDTH 20 MATERIALIZED;

dateTime 'Time' = ABSTRACT DATETIME (ResLedger) MATERIALIZED;
number 'Number' = ABSTRACT STRING[31] (ResLedger);

location 'Source location' = ABSTRACT Location (ResLedger) MATERIALIZED;
nameLocation 'Source location' (ResLedger r) = name(location(r));

product 'Product' = ABSTRACT Product (ResLedger) MATERIALIZED;
nameProduct 'Product' (ResLedger r) = name(product(r));

INDEX product(ResLedger l);
INDEX location(ResLedger l), product(l);

reserved 'Reserved quantity' = ABSTRACT NUMERIC[16,3] (ResLedger) MATERIALIZED;

partner 'Partner' = ABSTRACT Partner (ResLedger) MATERIALIZED;
namePartner 'Partner' (ResLedger l) = name(partner(l));

reserved 'Reserved' (Location l, Product p) = 
    GROUP SUM reserved(ResLedger sl) IF location(sl) = l 
                                        AND product(sl) = p MATERIALIZED; 

reservedRec 'Reserved (including nested)' (Location l, Product p) = 
    GROUP SUM reserved(Location child, p) IF level(child, l) MATERIALIZED;
                                        
available 'Available' (Location ll, Product p) = onHand(ll,p) (-) reserved(ll,p);
prevAvailable 'Available' (Location ll, Product p) = PREV(available(ll, p)); 

availableRec 'Available' (Location ll, Product p) = onHandRec(ll,p) (-) reservedRec(ll,p);
prevAvailableRec 'Available' (Location ll, Product p) = PREV(availableRec(ll, p)); 

CONSTRAINT SET(available (Location ll, Product p) < 0) AND recPositiveOnHand(ll) 
            MESSAGE 'Available balance cannot be negative';