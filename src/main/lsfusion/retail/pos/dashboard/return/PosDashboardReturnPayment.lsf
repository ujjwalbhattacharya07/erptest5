MODULE PosDashboardReturnPayment;

REQUIRE PosDashboardReturn, PosDashboardPayment, CreditNote, OutgoingPaymentDone;

NAMESPACE Retail;

invoicePaid 'Paid' (Bill b, PaymentMethod pm) = GROUP SUM paid(Invoice i, pm) IF in(i, b);
invalidAmount(Bill b, PaymentMethod pm) = amount(pm) > OVERRIDE invoicePaid(b, pm), 0.0; 

FORM posPaymentReturn 'Payment'
    OBJECTS b = Bill PANEL
    PROPERTIES nameVendor(b), amount(b)
    
    OBJECTS pm = PaymentMethod
    PROPERTIES name(pm) READONLY, invoicePaid(b, pm), amount(pm) BACKGROUND invalidAmount(b, pm)
    FILTERS NOT disabled(pos(session(b)), pm)
    
    PROPERTIES overFormOk = formOk() 
        READONLYIF NOT paymentAmount() = amount(b) OR GROUP SUM 1 IF invalidAmount(b, PaymentMethod ppm) 
;

DESIGN posPaymentReturn {
    OBJECTS {
        NEW top {
            alignment = STRETCH;
            MOVE PROPERTY(nameVendor(b)) { fontSize = 24; alignment = STRETCH; changeKey = 'F5'; }
        }
        NEW pane {
            horizontal = TRUE;
            fill = 1;
            NEW center {
                fill = 1;
                MOVE PROPERTY(amount(b)) { fontSize = 24; alignment = STRETCH; }
                MOVE BOX(pm) {
                    GRID(pm) {
                        defaultComponent = TRUE;
                        PROPERTY(name(pm)) { fontSize = 24; focusable = FALSE; }
                        PROPERTY(invoicePaid(b, pm)) { fontSize = 24; }
                        PROPERTY(amount(pm)) { fontSize = 24; }
                    }
                    REMOVE TOOLBARBOX(pm);
                }
            }
            NEW right { alignment = STRETCH; }
        }
    }
    
    TOOLBARRIGHT {
        REMOVE PROPERTY(formRefresh());
        REMOVE PROPERTY(formOk());
        PROPERTY(formClose()) { fontSize = 24; fill = 1; }
        MOVE PROPERTY(overFormOk) { fontSize = 24; fill = 1; }
    }
}

EXTEND FORM posPaymentReturn
    EVENTS ON INIT { ACTIVATE PROPERTY posPaymentReturn.amount(pm); }
;

@defineKeyboardDecimal(amount, posPaymentReturn, PaymentMethod, pm, right, 64);

posPayment 'Payment' (Session s, Bill b) {
    amount(PaymentMethod pm) <- NULL;
    DIALOG posPaymentReturn OBJECTS b = b NOMANAGESESSION DO {
        FOR am = amount(PaymentMethod pm) DO NEW p = OutgoingPayment {
            done(p) <- TRUE;
            
            paymentMethod(b, p) <- pm;
            type(p) <- outgoingPaymentType(pm);
            
            company(p) <- company(pos(session(b)));
            companyAccount(p) <- account(pos(session(b)), pm);
            
            partner(p) <- vendor(b);
            
            amount(p) <- am;
            paid(b, p) <- am;
        }
        ready(b) <- TRUE;
        APPLY;
        IF canceled() THEN {
            DELETE IncomingPayment p WHERE SET(p IS IncomingPayment);
            ready(b) <- NULL;
        } ELSE {
            createInvoice(s);
        }
    }
} CHANGEKEY 'ctrl ENTER';

EXTEND FORM posDashboard
    PROPERTIES(s, b) posPayment READONLYIF NOT amount(b)
;

DESIGN posDashboard {
    billActions {
        MOVE PROPERTY(posPayment(s, b)) { fill = 1; fontStyle = 'bold'; }
    }
}

// payment method total
EXTEND FORM posDashboard
    PROPERTIES READONLY paid(sb, pm) COLUMNS (pm) HEADER name(pm) 
;