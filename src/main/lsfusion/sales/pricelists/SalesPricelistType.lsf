MODULE SalesPricelistType;

REQUIRE SalesSettings, SalesPriceType;

NAMESPACE Sales;

CLASS PricelistType 'Pricelist type';
name '{Name}' = DATA ISTRING[50] (PricelistType) NONULL IN id CHARWIDTH 15;

id '{ID}' = DATA STRING[20] (PricelistType) CHARWIDTH 10;
priceListType (STRING[20] id) = GROUP AGGR PricelistType t BY id(t);

numerator 'Numerator' = DATA Numerator (PricelistType);
nameNumerator 'Numerator' (PricelistType o) = name(numerator(o));

showCost 'Show cost price' = DATA BOOLEAN (PricelistType);

in 'Incl.' = DATA BOOLEAN (PricelistType, PriceType);

showCurrentPrice 'Show current prices' = DATA BOOLEAN (PricelistType, PriceType);
showMarkup 'Show markups' = DATA BOOLEAN (PricelistType, PriceType);

basePriceType = DATA PriceType (PricelistType, PriceType);
nameBasePriceType 'Calculate markup from' (PricelistType t, PriceType pt) = name(basePriceType(t, pt));

FORM pricelistType 'Pricelist type'
    OBJECTS t = PricelistType PANEL
    PROPERTIES(t) name, id, nameNumerator, showCost
                  
    OBJECTS p = PriceType
    PROPERTIES in(t, p) 
    PROPERTIES READONLY name(p)
    PROPERTIES(t, p) showMarkup, showCurrentPrice, nameBasePriceType
    
    EDIT PricelistType OBJECT t
;

DESIGN pricelistType {
    OBJECTS {
        NEW header {
            horizontal = TRUE;
            MOVE PROPERTY(name(t));
            MOVE PROPERTY(id(t));
            MOVE PROPERTY(nameNumerator(t));
        }
        NEW params {
            horizontal = TRUE;
            MOVE PROPERTY(showCost(t));
        }
        MOVE BOX(p) {
            PROPERTY(showMarkup(t, p)) { valueWidth = 120; }
            PROPERTY(showCurrentPrice(t, p)) { valueWidth = 120; }
        }
    }
}

FORM pricelistTypes 'Types of price lists'
    OBJECTS t = PricelistType
    PROPERTIES(t) READONLY name, id
    
    LIST PricelistType OBJECT t
;
 
EXTEND FORM options
    OBJECTS pt = PricelistType
    PROPERTIES(pt) READONLY name, id
    PROPERTIES(pt) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(pt);
    }
}

countPricelistTypes 'Number of types' () = GROUP SUM 1 IF PricelistType t IS PricelistType; 
firstPricelistType = GROUP LAST PricelistType t ORDER DESC t WHERE t IS PricelistType;

defaultPricelistType = firstPricelistType() IF countPricelistTypes() = 1;