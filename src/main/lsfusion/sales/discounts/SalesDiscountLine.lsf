MODULE SalesDiscountLine;

REQUIRE SalesDiscount, SalesLedgerPartner, SalesPricelistValue;

NAMESPACE Sales;

CLASS ABSTRACT SalesDiscountLine;

skip = ABSTRACT BOOLEAN (SalesDiscountLine);

dateTime = ABSTRACT DATETIME (SalesDiscountLine);
customer = ABSTRACT Partner (SalesDiscountLine);
item = ABSTRACT Item (SalesDiscountLine);
priceType = ABSTRACT PriceType (SalesDiscountLine);

quantity = ABSTRACT NUMERIC[16,3] (SalesDiscountLine);
price = ABSTRACT NUMERIC[10,2] (SalesDiscountLine);
amount = ABSTRACT NUMERIC[14,2] (SalesDiscountLine);

matches (Discount d, SalesDiscountLine l) =
    set(d, primary(item(l))) AND
    NOT skip(l) AND
    NOT (countPriceType(d) AND NOT in(d, priceType(l))) AND
    NOT startDateTime(d) > dateTime(l) AND
    NOT endDateTime(d) < dateTime(l) AND
    NOT fromQuantity(d) > quantity(l) AND
    NOT fromAmount(d) > amount(l) AND
    NOT fromAccumulated(d) > (OVERRIDE prevTotalSoldAmount(customer(l)), -0.01) AND
    NOT fromAccumulatedPreviousMonth(d) > (OVERRIDE prevSoldAmountPreviousMonth(customer(l)), 0.0) COMPLEX;

discountPrice 'Discount price' (Discount d, SalesDiscountLine l) =
    IF priceType(d) THEN priceA(priceType(d), item(l), dateTime(l)) ELSE NUMERIC[10,2](price(l) * (100.0 - discount(d)) / 100.0); 
    
minSalesDiscountAuto (SalesDiscountLine l) =
    GROUP LAST Discount d ORDER DESC discountPrice(d, l) IF matches(d, l) AND NOT manual(d), d; 

// manual select

FORM selectDiscount 'Discount selection'
    OBJECTS l = SalesDiscountLine PANEL
    
    OBJECTS d = Discount
    PROPERTIES(d) READONLY name, manual, discount, namePriceType
    PROPERTIES    READONLY discountPrice(d, l)
    FILTERS matches(d, l)
;

// meta
META defineDocSalesDiscountLine (doc, caption, NS)
    EXTEND CLASS ###doc##Line : SalesDiscountLine;
    
    dateTime(###doc##Line l) += NS.dateTime(l);
    customer(###doc##Line l) += NS.customer(l);
    item(###doc##Line l) += NS.item(l);
    priceType(###doc##Line l) += priceType(l);
    
    quantity(###doc##Line l) += NS.quantity(l);
    price(###doc##Line l) += NS.price(l);
    
    fullPrice (###doc##Line l) = price(l) * (IF taxIncluded(l) THEN 1.0 ELSE (100.0 (+) taxPercent(l)) / 100.0);
    fullAmount (###doc##Line l) = NUMERIC[14,2](quantity(l) * fullPrice(l));

    fullAmount (###doc o) = GROUP SUM NUMERIC[14,2](quantity(###doc##Line l) * price(l) *
                                                    (IF taxIncluded(l) THEN 1.0 ELSE (100.0 (+) taxPercent(l)) / 100.0)) 
                                      IF doc(l) = o;
    discountAmount (###doc o) = fullAmount(o) (-) amount(o);
    
    amount(###doc##Line l) += fullAmount(doc(l));
    
    noRecalcDiscountAuto###doc caption = DATA BOOLEAN () PREREAD;
    EXTEND FORM options PROPERTIES() noRecalcDiscountAuto###doc;
    
    WHEN LOCAL (CHANGED(dateTime(###doc##Line l)) OR CHANGED(quantity(l)) OR CHANGED(fullAmount(doc(l))) OR 
                CHANGED(customer(l)) OR CHANGED(item(l)) OR CHANGED(price(l)) OR CHANGED(type(l))) AND 
                NOT noRecalcDiscountAuto###doc() AND NOT manual(salesDiscount(l)) DO
        salesDiscount(l) <- minSalesDiscountAuto(l);
    
    recalcDiscountAuto 'Calculate discounts' (###doc d) {
        salesDiscount(###doc##Line l) <- minSalesDiscountAuto(l) WHERE doc(l) = d AND NOT manual(salesDiscount(l));
    }
END