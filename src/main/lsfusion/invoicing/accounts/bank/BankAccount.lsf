MODULE BankAccount;

REQUIRE Account, Bank, Utils;

NAMESPACE Invoicing;

CLASS BankAccount 'Bank account' : Account;

number 'Account number' = DATA STRING[30] (BankAccount) IN id NONULL;

bank 'Bank' = DATA Bank (BankAccount) NONULL;
nameBank 'Bank' (BankAccount b) = name(bank(b));
id 'Bank code' (BankAccount b) = id(bank(b));

name (BankAccount a) += (CONCAT ' ', number(a), 'Ð² ' + nameBank(a)) IF a IS BankAccount; 

EXTEND CLASS AccountType {
     bank 'Bank account'
}

type(Account a) += WHEN a IS BankAccount THEN AccountType.bank;

EXTEND FORM account
    PROPERTIES(a) number, nameBank, id READONLY
;

DESIGN account {
    OBJECTS {
        NEW bank AFTER params {
            horizontal = TRUE;
            MOVE PROPERTY(number(a));
            MOVE PROPERTY(nameBank(a)) { notNull = TRUE; }
            MOVE PROPERTY(id(a));
        }
    }
}

newBankAccount 'Bank account' () {
    NEWSESSION {
        NEW b = BankAccount {
            DIALOG account OBJECTS a = b DOCKED DO seek(b);  
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

newBankAccount 'Bank account' (Partner p) {
    NESTEDSESSION {
        NEW b = BankAccount {
            holder(b) <- p;
            DIALOG account OBJECTS a = b DOCKED DO seek(b);
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

EXTEND FORM accounts
    PROPERTIES newBankAccount() DRAW a TOOLBAR
    
    LIST BankAccount OBJECT a
;

EXTEND FORM partner
    PROPERTIES newBankAccount(p) DRAW a TOOLBAR
;

countBankAccount (Partner p) = GROUP SUM 1 IF BankAccount a IS BankAccount AND holder(a) = p; 
calcDefaultBankAccount (Partner p) = GROUP LAST BankAccount a ORDER a WHERE holder(a) = p IF countBankAccount(p) = 1;
defaultBankAccount (Partner p) = OVERRIDE defaultAccount(p) AS BankAccount, calcDefaultBankAccount(p);
