MODULE TaxItem;

REQUIRE Tax, Item, ItemSales, ItemPurchase;

NAMESPACE Invoicing;

@defineTax(sales, Item, 'Sales ', item, i, sales);
@defineTax(purchase, Item, 'Purchase ', item, i, purchase);

// copy
copy(Item n, Item o) + {
    FOR salesIn(o, Tax t) DO {
        salesIn(n, t) <- TRUE;
    }
    FOR purchaseIn(o, Tax t) DO {
        purchaseIn(n, t) <- TRUE;
    }
}

// default
@defineTax(dataSales, Category, 'Sales ', category, c, default);
@defineTax(dataPurchase, Category, 'Purchase ', category, c, default);

defaultSalesIn (Category c, Tax t) = GROUP LAST dataSalesIn(Category parent, t) ORDER DESC level(c, parent);
countSalesTaxes (Category c) = GROUP SUM 1 IF defaultSalesIn(c, Tax t);
WHEN LOCAL SETCHANGED(category(Item i)) AND countSalesTaxes(category(i)) DO salesIn(i, Tax t) <- defaultSalesIn(category(i), t);

defaultPurchaseIn (Category c, Tax t) = GROUP LAST dataPurchaseIn(Category parent, t) ORDER DESC level(c, parent);
countPurchaseTaxes (Category c) = GROUP SUM 1 IF defaultPurchaseIn(c, Tax t);
WHEN LOCAL SETCHANGED(category(Item i)) AND countPurchaseTaxes(category(i)) DO purchaseIn(i, Tax t) <- defaultPurchaseIn(category(i), t);