MODULE IncomingPaymentType;

REQUIRE Numerator, InvoicingSettings, BankAccount, CashAccount;

NAMESPACE Invoicing;

CLASS IncomingPaymentType 'Incoming payment type';
name '{Name}' = DATA ISTRING[50] (IncomingPaymentType) NONULL IN id CHARWIDTH 15;

id '{ID}' = DATA STRING[20] (IncomingPaymentType);
incomingPaymentType = GROUP AGGR IncomingPaymentType t BY id(t);

interpay 'Internal payment' = DATA BOOLEAN (IncomingPaymentType);

cash 'Cash account' = DATA BOOLEAN (IncomingPaymentType);
bank 'Bank account' = DATA BOOLEAN (IncomingPaymentType);

CONSTRAINT IncomingPaymentType t IS IncomingPaymentType AND NOT cash(t) AND NOT bank(t)
    MESSAGE 'At least one account type must be allowed';

numerator 'Numerator' = DATA Numerator (IncomingPaymentType);
nameNumerator 'Numerator' (IncomingPaymentType o) = name(numerator(o));

FORM incomingPaymentType 'Incoming payment type'
    OBJECTS o = IncomingPaymentType PANEL 
    PROPERTIES(o) name, id, nameNumerator,
                  interpay, cash, bank  
     
    EDIT IncomingPaymentType OBJECT o;
;

DESIGN incomingPaymentType {
    OBJECTS {
        NEW typeAccount {
            caption = 'Allowed account types';
            horizontal = TRUE;
            MOVE PROPERTY(cash(o));
            MOVE PROPERTY(bank(o));
        }
        NEW tabbedPane {
            fill = 1;
            tabbed = TRUE;
        }
    }   
}

FORM incomingPaymentTypes 'Types of incoming payments'
    OBJECTS o = IncomingPaymentType
    PROPERTIES(o) READONLY name, id
    
    LIST IncomingPaymentType OBJECT o;
;

EXTEND FORM options
    OBJECTS ipt = IncomingPaymentType
    PROPERTIES(ipt) READONLY name, id
    PROPERTIES(ipt) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(ipt);
    }
}

defaultAccount(Partner p, IncomingPaymentType t) = CASE OVERRIDE
    WHEN bank(t) AND cash(t) THEN defaultAccount(p)
    WHEN bank(t) THEN defaultBankAccount(p)
    WHEN cash(t) THEN defaultCashAccount(p)
;