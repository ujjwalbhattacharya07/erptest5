MODULE IncomingPaymentCanceled;

REQUIRE IncomingPaymentDone;

NAMESPACE Invoicing;
    
EXTEND CLASS IncomingPaymentStatus {
    canceled 'Cancelled'
}
canceled 'Cancelled' = DATA BOOLEAN (IncomingPayment);
active '{Active}' (IncomingPayment s) = done(s) AND NOT canceled(s);

status(IncomingPayment s) += WHEN canceled(s) THEN IncomingPaymentStatus.canceled;
color(IncomingPaymentStatus s) += WHEN s = IncomingPaymentStatus.canceled THEN RGB(181,195,247);

cancel 'Cancel' (IncomingPayment s) {
    APPLY; 
    IF canceled() THEN RETURN;
           
    NEWSESSION {
        canceled(s) <- TRUE;
        APPLY;
    }
}

EXTEND FORM incomingPayment
    PROPERTIES(p) cancel SHOWIF NOT (status(p) = IncomingPaymentStatus.draft OR status(p) = IncomingPaymentStatus.canceled), canceled 
;

DESIGN incomingPayment {
    secondaryActions {
        MOVE PROPERTY(cancel(p));
    }             
    status {
        MOVE PROPERTY(canceled(p));                               
    }    
}

EXTEND FORM incomingPayments    
    EXTEND FILTERGROUP status
        FILTER 'Cancelled' status(p) = IncomingPaymentStatus.canceled    
;
