MODULE ProjectBill;

REQUIRE Project, Bill;

NAMESPACE ProjectManagement;

// type
billType = DATA BillType (ProjectType);
nameBillType 'Bill type' (ProjectType t) = name(billType(t));
EXTEND FORM projectType PROPERTIES nameBillType(o);

project = DATA Project (Bill) INDEXED;
nameProject 'Project' (Bill b) = name(project(b));

countBills 'Bills' (Project p) = GROUP SUM 1 IF project(Bill b) = p;

project (BillLine l) = project(bill(l));

EXTEND FORM bill
    PROPERTIES(b) nameProject READONLYIF readonly(b)
;

DESIGN bill {
    headerRight {
        MOVE PROPERTY(nameProject(b));
    }
}


EXTEND FORM bills
    PROPERTIES(b) READONLY nameProject
;

EXTEND FORM project
    OBJECTS b = Bill
    PROPERTIES(b) READONLY number, dateTime, 
                           imagedNameStatus BACKGROUND colorStatus(b), nameType, 
                           dueDateTime, namePaymentTerms, amount

    FILTERS project(b) = p
;

DESIGN project {
    details  {
        MOVE BOX(b) {
            caption = badged('Bills', countBills(p));
            GRID(b) { headerHeight = 24; }
        }
    }
}

fill ABSTRACT LIST (Bill, Project);

create (Bill b, Project p) {
    project(b) <- p;

    type(b) <- billType(type(p));

    company(b) <- company(p);

    fill(b, p);
}

createBill 'Create Bill' (Project p) {
    APPLY;
    IF canceled() THEN RETURN;

    NEWSESSION {
        NEW b = Bill {
            create(b, p);

            SHOW bill OBJECTS b = b DOCKED;
        }
    }
}

EXTEND FORM project
    PROPERTIES(p) 'Add' = createBill DRAW b TOOLBAR
    PROPERTIES(b) NEWSESSION EDIT, DELETE
;